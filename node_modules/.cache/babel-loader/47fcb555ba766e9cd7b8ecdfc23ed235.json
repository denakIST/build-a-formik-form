{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dakar\\\\Desktop\\\\FullStack\\\\wk13\\\\build-a-formik-form_starter (1)\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFormik } from 'formik';\nimport validator from 'validator';\n// TODO: import useFormik from formik library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // TODO: add a const called formik assigned to useFormik()\n\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: values => {\n      alert(formik.notify.msg);\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.emailField) errors.emailField = \"Field required\";\n      if (!values.pswField) errors.pswField = \"Field required\";\n      if (values.emailField && !validator.isEmail(values.emailField)) errors.emailField = \"Username should be an email\";\n      return errors;\n    },\n    notify: () => {\n      msg = '';\n      if (!values.errors) msg = \"Login Successful\";\n      return msg;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"emailField\",\n        type: \"email\",\n        onChange: formik.handleChange,\n        value: formik.values.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), formik.errors.emailField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        children: formik.errors.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"pswField\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pswField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), formik.errors.pswField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pswError\",\n        children: formik.errors.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 36\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submitBtn\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","validator","App","formik","initialValues","emailField","pswField","onSubmit","values","alert","notify","msg","validate","errors","isEmail","handleSubmit","handleChange"],"sources":["C:/Users/dakar/Desktop/FullStack/wk13/build-a-formik-form_starter (1)/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useFormik } from 'formik';\nimport  validator  from 'validator';\n// TODO: import useFormik from formik library\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: '',\n    },\n    onSubmit: values => {\n      alert(formik.notify.msg)\n      \n    },\n    validate: values => {\n      let errors = {};\n      if (!values.emailField) errors.emailField = \"Field required\";\n      if (!values.pswField) errors.pswField = \"Field required\";\n      if (values.emailField && !validator.isEmail(values.emailField)) errors.emailField = \"Username should be an email\";\n      return errors;\n    },\n\n    notify: () => {\n      msg = '';\n      if (!values.errors) msg = \"Login Successful\";\n      return msg;\n    }\n  });\n\n  return (\n    <div>\n      <form onSubmit = {formik.handleSubmit}>\n        <div>Email</div>\n        <input name='emailField' type='email' onChange={ formik.handleChange} value={formik.values.emailField} />\n        {formik.errors.emailField ? (<div id='emailError'>{ formik.errors.emailField}</div>) : null}\n        <div>pswField</div>\n        <input name='pswField' type='text' onChange={ formik.handleChange} value={formik.values.pswField} />\n        {formik.errors.pswField ? (<div id='pswError'>{ formik.errors.pswField}</div>) : null}  \n        <div>\n          <button id='submitBtn' type='submit'>Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAQC,SAAS,MAAO,WAAW;AACnC;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb;;EAEA,MAAMC,MAAM,GAAGH,SAAS,CAAC;IACvBI,aAAa,EAAE;MACbC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAEC,MAAM,IAAI;MAClBC,KAAK,CAACN,MAAM,CAACO,MAAM,CAACC,GAAG,CAAC;IAE1B,CAAC;IACDC,QAAQ,EAAEJ,MAAM,IAAI;MAClB,IAAIK,MAAM,GAAG,CAAC,CAAC;MACf,IAAI,CAACL,MAAM,CAACH,UAAU,EAAEQ,MAAM,CAACR,UAAU,GAAG,gBAAgB;MAC5D,IAAI,CAACG,MAAM,CAACF,QAAQ,EAAEO,MAAM,CAACP,QAAQ,GAAG,gBAAgB;MACxD,IAAIE,MAAM,CAACH,UAAU,IAAI,CAACJ,SAAS,CAACa,OAAO,CAACN,MAAM,CAACH,UAAU,CAAC,EAAEQ,MAAM,CAACR,UAAU,GAAG,6BAA6B;MACjH,OAAOQ,MAAM;IACf,CAAC;IAEDH,MAAM,EAAE,MAAM;MACZC,GAAG,GAAG,EAAE;MACR,IAAI,CAACH,MAAM,CAACK,MAAM,EAAEF,GAAG,GAAG,kBAAkB;MAC5C,OAAOA,GAAG;IACZ;EACF,CAAC,CAAC;EAEF,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAIR,MAAM,CAACY,YAAa;MAAA,wBACpC;QAAA,UAAK;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eAChB;QAAO,IAAI,EAAC,YAAY;QAAC,IAAI,EAAC,OAAO;QAAC,QAAQ,EAAGZ,MAAM,CAACa,YAAa;QAAC,KAAK,EAAEb,MAAM,CAACK,MAAM,CAACH;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,EACxGF,MAAM,CAACU,MAAM,CAACR,UAAU,gBAAI;QAAK,EAAE,EAAC,YAAY;QAAA,UAAGF,MAAM,CAACU,MAAM,CAACR;MAAU;QAAA;QAAA;QAAA;MAAA,QAAO,GAAI,IAAI,eAC3F;QAAA,UAAK;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM,eACnB;QAAO,IAAI,EAAC,UAAU;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAGF,MAAM,CAACa,YAAa;QAAC,KAAK,EAAEb,MAAM,CAACK,MAAM,CAACF;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,EACnGH,MAAM,CAACU,MAAM,CAACP,QAAQ,gBAAI;QAAK,EAAE,EAAC,UAAU;QAAA,UAAGH,MAAM,CAACU,MAAM,CAACP;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO,GAAI,IAAI,eACrF;QAAA,uBACE;UAAQ,EAAE,EAAC,WAAW;UAAC,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QAChD;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GA1CQJ,GAAG;EAAA,QAGKF,SAAS;AAAA;AAAA,KAHjBE,GAAG;AA4CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}